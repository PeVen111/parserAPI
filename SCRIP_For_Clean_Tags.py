import json

alarm_DICT = {
    "<p>": 13,
    "<strong>": 8,
    "</strong>": 8,
    "</p>": 13,
    "<em>": 1,
    "</em>": 1,
    "<br />": 4,
    "<ul>": 4,
    "<li>": 18,
    "</li>": 18,
    "</ul>": 4
}

des_small = '''<p><strong>DSSL — ведущий разработчик программного обеспечения, 
а также производитель и партнер мировых поставщиков систем видеонаблюдения.</strong></p>'''

des = '''<p><strong>DSSL — ведущий разработчик программного обеспечения, а также производитель и 
партнер мировых поставщиков систем видеонаблюдения.</strong></p> <p><strong><em>Готовы поспорить, 
что сегодня вы уже попали в объективы наших камер: покупая продукты, снимая деньги в банкомате, либо прогуливаясь 
по оживленной улице.</em></strong></p> <p><strong>Мы будем рады поделиться опытом и наработками с новым специалистом 
нашей команды.</strong></p> <p><strong>Чем предстоит заниматься?</strong><br /><br />Работа над оптимизацией 
и автоматизацией внутренних процессов</p> <p><strong>Обязанности:</strong></p> <ul> <li>Разрабатывать ботов</li> 
<li>Работать с API различных информационнах систем</li> 
<li>Работать над оптимизацией и автоматизацией внутренних процессов</li> 
<li>Применять методы машенного обучения там, где это потребуется</li> 
<li>Изучать появляющиеся трендовые технологии и использовать их на практике</li> </ul> 
<p><strong>Для нас важно:</strong></p> <ul> <li>Уверенное знание языка и библиотек Python.</li> 
<li>Знание SQL, опыт работы с реляционными базами данных (PostgreSQL, MySQL).</li> 
<li>Понимание принципов REST API и архитектуры веб-фреймворков (Flask).</li> <li>Умение работать c Git.</li> 
<li>Понимание принципов работы диалоговых ботов, API и фреймворков для их построения 
(Microsoft Bot Framework, Telegram Bot API, Telebot).</li> </ul> <p><br />
<strong>Будет плюсом:</strong></p> <ul> 
<li>Опыт работы с python библиотеками для машинного обучения и обработки данных 
(Pandas, Seaborn, Scikit-learn, NumPy, PyTorch и т.д.).</li> 
<li>Понимание основных принципов построения моделей машинного обучения и интеграции их с внутренними сервисами компании.</li> 
<li>Понимание структуры данных и основных вычислительных алгоритмов.</li> </ul> <p><br /><strong>Мы предлагаем:</strong></p> 
<ul> <li> <p>УДАЛЕННУЮ работу;</p> </li> <li> <p>гибкий график работы 
(можно начинать работать в 12, если так лучше работается);</p> </li> 
<li> <p>полностью белую заработную плату.</p> </li> <li> 
<p>возможности роста и развития внутри компании: сильное профессиональное сообщество, корпоративный университет.</p> 
</li> <li> <p>ДМС с первого рабочего дня.</p> </li> </ul>
'''

### ----- Это работало
# cap = ''
# selec = False
# for i in des:
#     if selec:
#         cap += i 
#     if i == "<":
#         cap = i
#         selec = True
#     if  i == ">":
#         print(cap)
#         cap = ''
### ----- END Это работало

STORE_Tags = []
dicFor_COUNT = {}

def PUT_in_dicFor_COUNT(cap):
    if cap in dicFor_COUNT:
        dicFor_COUNT[cap] += 1
    else:
        dicFor_COUNT[cap] = 1

def search_TAGS(arg):
    cap = ''
    selec = False
    for i in arg:
        if selec:
            cap += i 
        if i == "<":
            cap = i
            selec = True
        if  i == ">":
            STORE_Tags.append(cap)
            PUT_in_dicFor_COUNT(cap)
            if cap not in alarm_DICT:
                print('!!!---ALARM--!!!', cap, '!!!---ALARM--!!!')
            cap = ''

# print(STORE_Tags)
    print(dicFor_COUNT)
    print(json.dumps(dicFor_COUNT, indent=4, ensure_ascii=False))
    STORE_Tags.clear()
    dicFor_COUNT.clear()

if __name__ == '__main__':
    search_TAGS(des)

        
        
